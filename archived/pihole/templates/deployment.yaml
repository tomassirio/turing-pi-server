apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pihole.fullname" . }}
  labels:
    app: {{ include "pihole.name" . }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ include "pihole.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "pihole.name" . }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.ports.http.port }}
          env:
            - name: PUID
              value: "{{ .Values.env.PUID }}"
            - name: PGID
              value: "{{ .Values.env.PGID }}"
            - name: TZ
              value: "{{ .Values.env.TZ }}"
          volumeMounts:
            - mountPath: /etc/pihole
              subPath: {{ .Values.persistence.config.subPath }}
              name: pihole-config
            - mountPath: /etc/dnsmasq.d
              name: pihole-config
              subPath: "{{ .Values.persistence.config.subPath }}/dnsmasq.d"
      volumes:
        - name: pihole-config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.config.existingClaim }}